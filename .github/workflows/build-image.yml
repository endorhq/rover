name: Build and Publish Docker Image
run-name: Build node image ${{ github.event.inputs.tag }}

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag (e.g., v1.0.0, latest)'
        type: string
        required: true
        default: 'latest'
      platforms:
        description: 'Target platforms'
        type: string
        required: true
        default: 'linux/amd64,linux/arm64'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Echo inputs
        run: |
          echo "Tag: $TAG"
          echo "Platforms: $PLATFORMS"
        env:
          TAG: ${{ inputs.tag }}
          PLATFORMS: ${{ inputs.platforms }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/node
          tags: |
            type=raw,value=${{ inputs.tag }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./images/node/Dockerfile
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Notify on Success
        if: success()
        env:
          IMAGE_TAG: ${{ inputs.tag }}
          IMAGE_URL: 'ghcr.io/${{ github.repository }}/node:${{ inputs.tag }}'
        run: |
          echo "✅ Successfully built and pushed Docker image"
          echo "Image: ${IMAGE_URL}"
          echo "Platforms: ${{ inputs.platforms }}"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "❌ Failed to build or push Docker image"
          echo "Please check the workflow logs for details"
